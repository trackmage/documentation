"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[510],{3905:function(e,t,r){r.d(t,{Zo:function(){return d},kt:function(){return f}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),c=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},d=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),p=c(r),f=a,y=p["".concat(l,".").concat(f)]||p[f]||u[f]||i;return r?n.createElement(y,o(o({ref:t},d),{},{components:r})):n.createElement(y,o({ref:t},d))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=p;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var c=2;c<i;c++)o[c]=r[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"},906:function(e,t,r){r.r(t),r.d(t,{assets:function(){return d},contentTitle:function(){return l},default:function(){return f},frontMatter:function(){return s},metadata:function(){return c},toc:function(){return u}});var n=r(7462),a=r(3366),i=(r(7294),r(3905)),o=["components"],s={id:"StandardEntityFields",title:"Standard Entity Fields",sidebar_label:"Standard Entity Fields",slug:"standard-entity-fields.html"},l=void 0,c={unversionedId:"StandardEntityFields",id:"StandardEntityFields",title:"Standard Entity Fields",description:"The TrackMage API consists of many object types. There are several attributes that are consistent across all",source:"@site/docs/StandardEntityFields.mdx",sourceDirName:".",slug:"/standard-entity-fields.html",permalink:"/docs/standard-entity-fields.html",draft:!1,tags:[],version:"current",frontMatter:{id:"StandardEntityFields",title:"Standard Entity Fields",sidebar_label:"Standard Entity Fields",slug:"standard-entity-fields.html"},sidebar:"mainSidebar",previous:{title:"Getting Started",permalink:"/docs/getting-started"},next:{title:"Errors",permalink:"/docs/errors.html"}},d={},u=[],p={toc:u};function f(e){var t=e.components,r=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"The TrackMage API consists of many object types. There are several attributes that are consistent across all objects:"),(0,i.kt)("ul",null,(0,i.kt)("li",null,(0,i.kt)("strong",null,"id"),": Every TrackMage Object that can be created and received through the API has an id field that is used to refer to the object in other API calls. An id is represented by UUID. These id values may be used in many API endpoints to refer to an existing object rather than specifying the full object definition."),(0,i.kt)("li",null,(0,i.kt)("strong",null,"workspace"),": Most API Objects also include Workspace value in format '/workspaces/UUID' that is used to refer to the Workspace to which the object belongs. These Workspace values are required in the most API endpoints."),(0,i.kt)("li",null,(0,i.kt)("strong",null,"created_at/updated_at"),": Most API objects also include values for created_at and updated_at. These two fields respectively specify the time the object in question was created and most recently updated. These datetime fields are formatted according to ",(0,i.kt)("a",{href:"https://www.w3.org/TR/NOTE-datetime",target:"_blank",title:"ISO 8601 Date and Time Formats"},"ISO 8601"),".")))}f.isMDXComponent=!0}}]);